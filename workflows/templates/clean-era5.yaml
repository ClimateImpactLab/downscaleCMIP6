apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: clean-era5
  labels:
    component: clean-era5
spec:
  workflowMetadata:
    labels:
      component: clean-era5
  entrypoint: main
  arguments:
    parameters:
    - name: in-zarr
      value: "gs://raw-305d04da/reanalysis/ERA-5/F320/tasmax.1995-2015.F320.v2.zarr"
    - name: out-zarr
      value: "gs://clean-b1dbca25/reanalysis/ERA-5/F320/tasmax.1995-2015.F320.zarr"
  templates:

  - name: main
    inputs:
      parameters:
        - name: in-zarr
        - name: out-zarr
    dag:
      tasks:
      - name: standardize
        template: standardize
        arguments:
          parameters:
          - name: in-zarr
            value: "{{ inputs.parameters.in-zarr }}"
          - name: out-zarr
            value: "{{ inputs.parameters.out-zarr }}"

  - name: noleap
    inputs:
      parameters:
      - name: in-zarr
      - name: out-zarr
    outputs:
      parameters:
      - name: out-zarr
        value: "{{ inputs.parameters.out-zarr }}"
    container:
      image: us-central1-docker.pkg.dev/downscalecmip6/private/dodola:0.5.0
      env:
      - name: IN_ZARR
        value: "{{  inputs.parameters.in-zarr }}"
      - name: OUT_ZARR
        value: "{{  inputs.parameters.out-zarr }}"
      - name: PYTHONUNBUFFERED
        value: "1"
      - name: AZURE_STORAGE_ACCOUNT
        valueFrom:
          secretKeyRef:
            name: workerstoragecreds-secret
            key: azurestorageaccount
      - name: AZURE_STORAGE_KEY
        valueFrom:
          secretKeyRef:
            name: workerstoragecreds-secret
            key: azurestoragekey
      command: ["dodola"]
      args:
      - "removeleapdays"
      - "{{ inputs.parameters.in-zarr }}"
      - "{{ inputs.parameters.out-zarr }}"
      resources:
        requests:
          memory: "42Gi"
          cpu: "2000m"
        limits:
          memory: "42Gi"
          cpu: "2000m"
    activeDeadlineSeconds: 2700
    retryStrategy:
      limit: 3
      retryPolicy: "Always"


  - name: standardize
    inputs:
      parameters:
      - name: in-zarr
      - name: out-zarr
    outputs:
      parameters:
      - name: out-zarr
        value: "{{ inputs.parameters.out-zarr }}"
    script:
      image: us-central1-docker.pkg.dev/downscalecmip6/private/dodola:0.5.0
      env:
      - name: IN_ZARR
        value: "{{  inputs.parameters.in-zarr }}"
      - name: OUT_ZARR
        value: "{{  inputs.parameters.out-zarr }}"
      - name: PYTHONUNBUFFERED
        value: "1"
      - name: PYTHONUNBUFFERED
        value: "1"
      command: [python]
      source: |
        import os
        import xarray as xr

        print("starting ERA-5 cleaning")

        in_store_path = os.environ.get("IN_ZARR")
        out_store_path = os.environ.get("OUT_ZARR")


        ds = xr.open_zarr(in_store_path)
        print(f"opening {in_store_path}")

        if "tmax" in ds.variables:
            ds = ds.rename({"tmax": "tasmax"})
        if "tmin" in ds.variables:
            ds = ds.rename({"tmin": "tasmin"})
        if "precip" in ds.variables:
            ds = ds.rename({"precip": "pr"})
        ds = ds.rename({"latitude": "lat", "longitude": "lon"})

        ds = ds.drop_vars("dayofyear", errors="ignore")

        print(f"standardized tmax/latitude/longitude name to tasmax/lat/lon")

        ds.to_zarr(out_store_path, mode="w")
        print(f"written to {out_store_path}")

        print("ERA-5 cleaning done")
      resources:
        requests:
          memory: 42Gi
          cpu: "2000m"
        limits:
          memory: 42Gi
          cpu: "2000m"
    activeDeadlineSeconds: 21600
    retryStrategy:
      limit: 3
      retryPolicy: "Always"


  - name: rechunk
    inputs:
      parameters:
        - name: in-zarr
        - name: out-zarr
        - name: time-chunk
        - name: lat-chunk
        - name: lon-chunk
    outputs:
      parameters:
        - name: out-zarr
          value: "{{ inputs.parameters.out-zarr }}"
    container:
      image: us-central1-docker.pkg.dev/downscalecmip6/private/dodola:0.5.0
      command: [dodola]
      args:
        - "rechunk"
        - "{{ inputs.parameters.in-zarr }}"
        - "--out"
        - "{{ inputs.parameters.out-zarr }}"
        - "--chunk"
        - "time={{ inputs.parameters.time-chunk }}"
        - "--chunk"
        - "lat={{ inputs.parameters.lat-chunk }}"
        - "--chunk"
        - "lon={{ inputs.parameters.lon-chunk }}"
      resources:
        requests:
          memory: 48Gi
          cpu: "2000m"
        limits:
          memory: 48Gi
          cpu: "2000m"
    activeDeadlineSeconds: 10800
    retryStrategy:
      limit: 3
      retryPolicy: "Always"
