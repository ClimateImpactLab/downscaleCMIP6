apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: aiqpd
  annotations:
    workflows.argoproj.io/description: >-
      Prototype AIQPD downscaling for bias-corrected CMIP6 GCM Zarr Stores.
    workflows.argoproj.io/tags: zarr,downscale,cmip6,aiqpd,dc6
    workflows.argoproj.io/version: '>= 3.1.0'
  labels:
    component: downscale
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: biascorrected-zarr
        value: "gs://biascorrected-492e989a/stage/ScenarioMIP/NOAA-GFDL/GFDL-ESM4/ssp370/r1i1p1f1/day/tasmax/gr1/v20211103182935.zarr"
      - name: variable-id
        value: "tasmax"
      - name: reference-zarr
        value: "gs://clean-b1dbca25/reanalysis/ERA-5/F320/tasmax.1995-2015.F320.zarr"
      - name: out-zarr
        value: "gs://scratch-170cd6ec/{{ workflow.uid }}/{{ pod.name }}/downscaled.zarr"
      - name: regrid-method
        value: "bilinear"
      - name: qdm-kind
        value: "additive"
      - name: domainfile1x1
        value: "gs://support-c23ff1a3/domain.1x1.zarr"
      - name: domainfile0p25x0p25
        value: "gs://support-c23ff1a3/domain.0p25x0p25.zarr"
  templates:

    - name: main
      inputs:
        parameters:
          - name: biascorrected-zarr
          - name: variable-id
          - name: reference-zarr
          - name: out-zarr
          - name: regrid-method
          - name: qdm-kind
          - name: domainfile1x1
          - name: domainfile0p25x0p25
      outputs:
        parameters:
          - name: out-zarr
            valueFrom:
              parameter: "{{ tasks.aiqpd.outputs.parameters.out-zarr }}"
      dag:
        tasks:
          - name: create-fine-reference
            template: create-fine-reference
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ inputs.parameters.reference-zarr }}"
                - name: regrid-method
                  value: "{{ inputs.parameters.regrid-method }}"
                - name: domain-file
                  value: "{{ inputs.parameters.domainfile0p25x0p25 }}"
          - name: create-coarse-reference
            template: create-coarse-reference
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ inputs.parameters.reference-zarr }}"
                - name: regrid-method
                  value: "{{ inputs.parameters.regrid-method }}"
                - name: domainfile0p25x0p25
                  value: "{{ inputs.parameters.domainfile0p25x0p25 }}"
                - name: domainfile1x1
                  value: "{{ inputs.parameters.domainfile1x1 }}"
          - name: preprocess-biascorrected
            template: preprocess-biascorrected
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ inputs.parameters.biascorrected-zarr }}"
                - name: domain-file
                  value: "{{ inputs.parameters.domainfile0p25x0p25 }}"
          - name: aiqpd
            template: aiqpd
            depends: >-
              preprocess-biascorrected
              && create-coarse-reference
              && create-fine-reference
            arguments:
              parameters:
                - name: variable-id
                  value: "{{ inputs.parameters.variable-id }}"
                - name: simulation-zarr
                  value: "{{ tasks.preprocess-biascorrected.outputs.parameters.out-zarr }}"
                - name: coarse-reference-zarr
                  value: "{{ tasks.create-coarse-reference.outputs.parameters.out-zarr }}"
                - name: fine-reference-zarr
                  value: "{{ tasks.create-fine-reference.outputs.parameters.out-zarr }}"
                - name: qdm-kind
                  value: "{{ inputs.parameters.qdm-kind }}"
                - name: out-zarr
                  value: "{{ inputs.parameters.out-zarr }}"


    - name: create-fine-reference
      inputs:
        parameters:
          - name: in-zarr
          - name: regrid-method
          - name: domain-file
      outputs:
        parameters:
          - name: out-zarr
            valueFrom:
              parameter: "{{ steps.move-chunks-to-space.outputs.parameters.out-zarr }}"
      steps:
        - - name: move-chunks-to-time
            templateRef:
              name: rechunk
              template: rechunk
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ inputs.parameters.in-zarr }}"
                - name: time-chunk
                  value: "73"
                - name: lat-chunk
                  value: -1
                - name: lon-chunk
                  value: -1
        - - name: regrid
            templateRef:
              name: distributed-regrid
              template: main
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ steps.move-chunks-to-time.outputs.parameters.out-zarr }}"
                - name: regrid-method
                  value: "{{ inputs.parameters.regrid-method }}"
                - name: domain-file
                  value: "{{ inputs.parameters.domain-file }}"
                - name: add-cyclic-lon
                  value: "true"
                - name: add-lat-buffer
                  value: "true"
        - - name: move-chunks-to-space
            templateRef:
              name: rechunk
              template: rechunk
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ steps.regrid.outputs.parameters.out-zarr }}"
                - name: time-chunk
                  value: 365
                - name: lat-chunk
                  value: 2
                - name: lon-chunk
                  value: -1


    - name: create-coarse-reference
      inputs:
        parameters:
          - name: in-zarr
          - name: regrid-method
          - name: domainfile0p25x0p25
          - name: domainfile1x1
      outputs:
        parameters:
          - name: out-zarr
            valueFrom:
              parameter: "{{ steps.move-chunks-to-space.outputs.parameters.out-zarr }}"
      steps:
        - - name: coarse-regrid
            templateRef:
              name: regrid
              template: regrid
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ inputs.parameters.in-zarr }}"
                - name: regrid-method
                  value: "{{ inputs.parameters.regrid-method }}"
                - name: domain-file
                  value: "{{ inputs.parameters.domainfile1x1 }}"
        - - name: move-chunks-to-time
            templateRef:
              name: rechunk
              template: rechunk
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ steps.coarse-regrid.outputs.parameters.out-zarr }}"
                - name: time-chunk
                  value: "73"
                - name: lat-chunk
                  value: -1
                - name: lon-chunk
                  value: -1
        - - name: fine-regrid
            templateRef:
              name: distributed-regrid
              template: main
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ steps.move-chunks-to-time.outputs.parameters.out-zarr }}"
                - name: regrid-method
                  value: "{{ inputs.parameters.regrid-method }}"
                - name: domain-file
                  value: "{{ inputs.parameters.domainfile0p25x0p25 }}"
                - name: add-cyclic-lon
                  value: "true"
                - name: add-lat-buffer
                  value: "true"
        - - name: move-chunks-to-space
            templateRef:
              name: rechunk
              template: rechunk
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ steps.fine-regrid.outputs.parameters.out-zarr }}"
                - name: time-chunk
                  value: 365
                - name: lat-chunk
                  value: 2
                - name: lon-chunk
                  value: -1


    - name: preprocess-biascorrected
      inputs:
        parameters:
          - name: in-zarr
          - name: regrid-method
            value: "nearest_s2d"
          - name: domain-file
      outputs:
        parameters:
          - name: out-zarr
            valueFrom:
              parameter: "{{ steps.regrid.outputs.parameters.out-zarr }}"
      steps:
        - - name: move-chunks-to-time
            templateRef:
              name: rechunk
              template: rechunk
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ inputs.parameters.in-zarr }}"
                - name: time-chunk
                  value: "73"
                - name: lat-chunk
                  value: -1
                - name: lon-chunk
                  value: -1
        - - name: regrid
            templateRef:
              name: distributed-regrid
              template: main
            arguments:
              parameters:
                - name: in-zarr
                  value: "{{ steps.move-chunks-to-time.outputs.parameters.out-zarr }}"
                - name: regrid-method
                  value: "{{ inputs.parameters.regrid-method }}"
                - name: domain-file
                  value: "{{ inputs.parameters.domain-file }}"
                - name: add-cyclic-lon
                  value: "true"
                - name: add-lat-buffer
                  value: "true"


    - name: aiqpd
      inputs:
        parameters:
          - name: simulation-zarr
          - name: coarse-reference-zarr
          - name: fine-reference-zarr
          - name: variable-id
          - name: qdm-kind
          - name: out-zarr
      outputs:
        parameters:
          - name: out-zarr
            valueFrom:
              parameter: "{{ steps.prime-aiqpd-output-zarr.outputs.parameters.out-zarr }}"
      steps:
        - - name: prime-aiqpd-output-zarr
            template: prime-aiqpd-output-zarr
            arguments:
              parameters:
                - name: simulation-zarr
                  value: "{{ inputs.parameters.simulation-zarr }}"
                - name: variable
                  value: "{{ inputs.parameters.variable-id}}"
                - name: out-zarr
                  value: "{{ inputs.parameters.out-zarr }}"
        - - name: with-lat-chunk
            template: with-lat-chunk
            arguments:
              parameters:
                - name: variable-id
                  value: "{{ inputs.parameters.variable-id}}"
                - name: simulation-zarr
                  value: "{{ inputs.parameters.simulation-zarr }}"
                - name: coarse-reference-zarr
                  value: "{{ inputs.parameters.coarse-reference-zarr }}"
                - name: fine-reference-zarr
                  value: "{{ inputs.parameters.fine-reference-zarr }}"
                - name: qdm-kind
                  value: "{{ inputs.parameters.qdm-kind }}"
                - name: out-zarr
                  value: "{{ steps.prime-aiqpd-output-zarr.outputs.parameters.out-zarr }}"
                  # Looping over 2 degree latitude bands...
                - name: lat-slice-min
                  value: "{{=asInt(item) * 2 }}"
                - name: lat-slice-max
                  value: "{{=asInt(item) * 2 + 2 }}"
            # Also, looping over 2 pixel chunk latitude bands:
            withSequence:
              start: "0"
              end: "359"


    - name: with-lat-chunk
      inputs:
        parameters:
          - name: simulation-zarr
          - name: coarse-reference-zarr
          - name: fine-reference-zarr
          - name: variable-id
          - name: qdm-kind
          - name: lat-slice-min
          - name: lat-slice-max
          - name: out-zarr
      steps:
        - - name: train-aiqpd
            template: train-aiqpd
            arguments:
              parameters:
                - name: variable-id
                  value: "{{ inputs.parameters.variable-id }}"
                - name: coarse-reference-zarr
                  value: "{{ inputs.parameters.coarse-reference-zarr }}"
                - name: fine-reference-zarr
                  value: "{{ inputs.parameters.fine-reference-zarr }}"
                - name: qdm-kind
                  value: "{{ inputs.parameters.qdm-kind }}"
                - name: lat-slice-min
                  value: "{{ inputs.parameters.lat-slice-min}}"
                - name: lat-slice-max
                  value: "{{ inputs.parameters.lat-slice-max}}"
        - - name: apply-aiqpd
            template: apply-aiqpd
            arguments:
              parameters:
                - name: variable
                  value: "{{ inputs.parameters.variable-id }}"
                - name: simulation-zarr
                  value: "{{ inputs.parameters.simulation-zarr }}"
                - name: aiqpd-model-zarr
                  value: "{{ steps.train-aiqpd.outputs.parameters.out-zarr }}"
                - name: qdm-kind
                  value: "{{ inputs.parameters.qdm-kind }}"
                - name: lat-slice-min
                  value: "{{ inputs.parameters.lat-slice-min }}"
                - name: lat-slice-max
                  value: "{{ inputs.parameters.lat-slice-max }}"
                - name: out-zarr
                  value: "{{ inputs.parameters.out-zarr }}"


    - name: train-aiqpd
      inputs:
        parameters:
          - name: coarse-reference-zarr
          - name: fine-reference-zarr
          - name: variable-id
          - name: qdm-kind
          - name: lat-slice-min
          - name: lat-slice-max
          - name: time-sel-start
            value: "1994-12-17"
          - name: time-sel-stop
            value: "2015-01-15"
          - name: out-zarr
            value: "gs://scratch-170cd6ec/{{ workflow.uid }}/{{ pod.name }}/aiqpd-model.zarr"
      outputs:
        parameters:
          - name: out-zarr
            value: "{{ inputs.parameters.out-zarr }}"
      container:
        image: us-central1-docker.pkg.dev/downscalecmip6/private/dodola:dev
        command: [ dodola ]
        args:
          - "train-aiqpd"
          - "--variable={{ inputs.parameters.variable-id }}"
          - "--coarse-reference={{ inputs.parameters.coarse-reference-zarr }}"
          - "--fine-reference={{ inputs.parameters.fine-reference-zarr }}"
          - "--out={{ inputs.parameters.out-zarr }}"
          - "--kind={{ inputs.parameters.qdm-kind }}"
          - "--selslice"
          - "time={{ inputs.parameters.time-sel-start }},{{ inputs.parameters.time-sel-stop }}"
          - "--iselslice"
          - "lat={{ inputs.parameters.lat-slice-min }},{{ inputs.parameters.lat-slice-max }}"
        resources:
          requests:
            memory: 12Gi
            cpu: "1000m"
          limits:
            memory: 12Gi
            cpu: "3000m"
      activeDeadlineSeconds: 600
      retryStrategy:
        limit: 2
        retryPolicy: "Always"
        backoff:
          duration: 30s
          factor: 2


    - name: apply-aiqpd
      inputs:
        parameters:
          - name: simulation-zarr
          - name: aiqpd-model-zarr
          - name: variable
          - name: lat-slice-min
          - name: lat-slice-max
          - name: out-zarr
            value: "gs://scratch-170cd6ec/{{ workflow.uid }}/{{ pod.name }}/aiqpd_adjusted.zarr"
      container:
        image: us-central1-docker.pkg.dev/downscalecmip6/private/dodola:dev
        command: [ dodola ]
        args:
          - "apply-aiqpd"
          - "--simulation={{ inputs.parameters.simulation-zarr}}"
          - "--aiqpd={{ inputs.parameters.aiqpd-model-zarr}}"
          - "--variable={{ inputs.parameters.variable }}"
          - "--out={{ inputs.parameters.out-zarr }}"
          - "--iselslice=lat={{ inputs.parameters.lat-slice-min }},{{ inputs.parameters.lat-slice-max }}"
          - "--out-zarr-region=lat={{ inputs.parameters.lat-slice-min }},{{ inputs.parameters.lat-slice-max }}"
          - "--new-attrs=dc6_workflow_name={{ workflow.name }}"
          - "--new-attrs=dc6_workflow_uid={{ workflow.uid }}"
          - "--new-attrs=dc6_version_id=v{{workflow.creationTimestamp.Y}}{{workflow.creationTimestamp.m}}{{workflow.creationTimestamp.d}}{{workflow.creationTimestamp.H}}{{workflow.creationTimestamp.M}}{{workflow.creationTimestamp.S}}"
        resources:
          requests:
            memory: 24Gi
            cpu: "1000m"
          limits:
            memory: 38Gi
            cpu: "6000m"
      activeDeadlineSeconds: 900
      retryStrategy:
        limit: 2
        retryPolicy: "Always"
        backoff:
          duration: 30s
          factor: 2


    # Sets up output zarr file and metadata without writing time-related data to the zarr store.
    - name: prime-aiqpd-output-zarr
      inputs:
        parameters:
          - name: simulation-zarr
          - name: variable
          - name: out-zarr
            value: "gs://scratch-170cd6ec/{{ workflow.uid }}/{{ pod.name }}/downscaled.zarr"
      outputs:
        parameters:
          - name: out-zarr
            value: "{{ inputs.parameters.out-zarr }}"
      container:
        image: us-central1-docker.pkg.dev/downscalecmip6/private/dodola:dev
        command: [ dodola ]
        args:
          - "prime-aiqpd-output-zarrstore"
          - "--simulation={{ inputs.parameters.simulation-zarr}}"
          - "--variable={{ inputs.parameters.variable }}"
          - "--out={{ inputs.parameters.out-zarr }}"
          - "--zarr-region-dims=lat"
          - "--new-attrs=dc6_workflow_name={{ workflow.name }}"
          - "--new-attrs=dc6_workflow_uid={{ workflow.uid }}"
          - "--new-attrs=dc6_version_id=v{{workflow.creationTimestamp.Y}}{{workflow.creationTimestamp.m}}{{workflow.creationTimestamp.d}}{{workflow.creationTimestamp.H}}{{workflow.creationTimestamp.M}}{{workflow.creationTimestamp.S}}"
        resources:
          requests:
            memory: 4Gi
            cpu: "1000m"
          limits:
            memory: 4Gi
            cpu: "1000m"
      activeDeadlineSeconds: 900
      retryStrategy:
        limit: 2
        retryPolicy: "Always"
